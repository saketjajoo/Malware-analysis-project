import pandas as pd
from sklearn import datasets 
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier 

colnames = ['URL_LENGTH','NUMBER_SPECIAL_CHARACTERS','TCP_CONVERSATION_EXCHANGE','DIST_REMOTE_TCP_PORT','REMOTE_IPS','SOURCE_APP_PACKETS','SOURCE_APP_BYTES','DNS_QUERY_TIMES','res']
data = pd.read_csv("dataset123.csv",names=colnames) 

tp = []
URLLEN=[]
NOSC=[]
TCE=[]
DRTP=[]
RI=[]
SAP=[]
SAB=[]
DQT=[]

urllrn = data.URL_LENGTH.tolist()[1:]
for ele in urllrn:
    URLLEN.append(int(ele))

nospchar = data.NUMBER_SPECIAL_CHARACTERS.tolist()[1:]
for ele in nospchar:
    NOSC.append(int(ele))

tcpconvrate = data.TCP_CONVERSATION_EXCHANGE.tolist()[1:]
for ele in tcpconvrate:
    TCE.append(int(ele))

disremrcpport = data.DIST_REMOTE_TCP_PORT.tolist()[1:]
for ele in disremrcpport:
    DRTP.append(int(ele))
    
remips = data.REMOTE_IPS.tolist()[1:]
for ele in remips:
    RI.append(int(ele))
    
srcapppack = data.SOURCE_APP_PACKETS.tolist()[1:]
for ele in srcapppack:
    SAP.append(int(ele))
    
srcappbytes = data.SOURCE_APP_BYTES.tolist()[1:]
for ele in srcappbytes:
    SAB.append(int(ele))
    
dnsqtime = data.DNS_QUERY_TIMES.tolist()[1:]
for ele in dnsqtime:
    DQT.append(int(ele))

rez = [URLLEN,NOSC,TCE,DRTP,RI,SAP,SAB,DQT]
#print(X)


y = data.res.tolist()[1:]
Y=[]
for ele in y:
    nos = int(ele)
    Y.append(nos)
#print(Y)

X = [[rez[j][i] for j in range(len(rez))] for i in range(len(rez[0]))]
#X = 399 x 8
#Y = 399 x 1

X_train = X[0:150]
y_train = Y[0:150]

knn = KNeighborsClassifier(n_neighbors = 7).fit(X_train, y_train) 

X_test = X[151:]
y_test = Y[151:]

accuracy = knn.score(X_test, y_test) 
print(accuracy)

"""knn_predictions = knn.predict(X_test)  
cm = confusion_matrix(y_test, knn_predictions) 
print(cm)"""

