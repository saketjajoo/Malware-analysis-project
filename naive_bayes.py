from sklearn import datasets
import pandas as pd
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
  
colnames = ['URL_LENGTH','NUMBER_SPECIAL_CHARACTERS','TCP_CONVERSATION_EXCHANGE','DIST_REMOTE_TCP_PORT','REMOTE_IPS','SOURCE_APP_PACKETS','SOURCE_APP_BYTES','DNS_QUERY_TIMES','res']
data = pd.read_csv("dataset123.csv",names=colnames) 

tp = []
URLLEN=[]
NOSC=[]
TCE=[]
DRTP=[]
RI=[]
SAP=[]
SAB=[]
DQT=[]

urllrn = data.URL_LENGTH.tolist()[1:]
for ele in urllrn:
    URLLEN.append(int(ele))

nospchar = data.NUMBER_SPECIAL_CHARACTERS.tolist()[1:]
for ele in nospchar:
    NOSC.append(int(ele))

tcpconvrate = data.TCP_CONVERSATION_EXCHANGE.tolist()[1:]
for ele in tcpconvrate:
    TCE.append(int(ele))

disremrcpport = data.DIST_REMOTE_TCP_PORT.tolist()[1:]
for ele in disremrcpport:
    DRTP.append(int(ele))
    
remips = data.REMOTE_IPS.tolist()[1:]
for ele in remips:
    RI.append(int(ele))
    
srcapppack = data.SOURCE_APP_PACKETS.tolist()[1:]
for ele in srcapppack:
    SAP.append(int(ele))
    
srcappbytes = data.SOURCE_APP_BYTES.tolist()[1:]
for ele in srcappbytes:
    SAB.append(int(ele))
    
dnsqtime = data.DNS_QUERY_TIMES.tolist()[1:]
for ele in dnsqtime:
    DQT.append(int(ele))

rez = [URLLEN,NOSC,TCE,DRTP,RI,SAP,SAB,DQT]
#print(X)


y = data.res.tolist()[1:]
Y=[]
for ele in y:
    nos = int(ele)
    Y.append(nos)
#print(Y)

X = [[rez[j][i] for j in range(len(rez))] for i in range(len(rez[0]))]
#X = 399 x 8
#Y = 399 x 1



X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state = 0) 
  
# training a Naive Bayes classifier 
from sklearn.naive_bayes import GaussianNB 
gnb = GaussianNB().fit(X_train, y_train) 
gnb_predictions = gnb.predict(X_test) 
  
# accuracy on X_test 
accuracy = gnb.score(X_test, y_test) 
print(accuracy)
  
# creating a confusion matrix 
cm = confusion_matrix(y_test, gnb_predictions)
print(cm)
